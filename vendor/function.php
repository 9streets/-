<?php

// autoload.php @generated by Composer

require_once __DIR__ . '/composer' . '/autoload_real.php';

return ComposerAutoloaderInit5e29b2c2d84bb23a17bbe59e2ef81d8f::getLoader();
/**
 * @param $url
 * @param $msg
 * @return \Illuminate\Http\RedirectResponse
 * success
 */
function success($msg, $url = '')
{
    if ($url) {
        return redirect($url)->with(['success' => 1, 'msg' => $msg]);
    } else {
        return back()->with(['success' => 1, 'msg' => $msg]);
    }
}

function upload_check($files)
{
    $images = array(                                              //文件格式限制
        'jpg', 'png', 'jpeg', 'gif', 'bmg'
    );
    $size = 8 * 1024 * 1024;                                           //文件大小限制8M
    foreach ($files as $names => $file) {
        $re = substr(strrchr($file['name'], '.'), 1);
        if ($file['error'] != '0') return '图片上传失败';
        if (!in_array($re, $images)) return '图片格式错误';
        if ($file['size'] > $size) return '请上传小于8M的图片';
    }
    return true;
}

function upload($file, $path)
{
    //获取文件名和扩展名
    $fn = $file['name'];
    $ft = strrpos($fn, '.', 0);
    //获取文件名
    $fm = substr($fn, 0, $ft);
    //获取扩展名
    $fe = substr($fn, $ft);
    //文件保存路径
    $fp = 'files/' . $fn;
    $fi = 1;
    //判断文件是否重名,如果重名则在文件名后面加1
    while (file_exists($fp)) {
        $fn = $fm . '[' . $fi . ']' . $fe;
        $fp = 'files/' . $fn;
        $fi++;
    }
    $random = substr(uniqid(), -6);
    //保存图片
    if (!is_dir($path)) {
        mkdir($path);
    }
    $savepath = $path . '/' . $random . $fn;
    move_uploaded_file($file['tmp_name'], $savepath);
    //返回存储路径
    return $savepath;
}

function Trim_All($str)
{
    $str = (string)$str;
    $qian = array(" ", "　", "\t", "\n", "\r");
    $hou = array("", "", "", "", "");
    return str_replace($qian, $hou, $str);
}

/**
 * @param $msg
 * @return \Illuminate\Http\RedirectResponse
 * error
 */

function error($msg)
{
    return back()->withErrors($msg)->withInput();
}


function getIP()
{
    $ip = '';
    if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
        return is_ip($_SERVER['HTTP_CLIENT_IP']) ? $_SERVER['HTTP_CLIENT_IP'] : $ip;
    } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
        return is_ip($_SERVER['HTTP_X_FORWARDED_FOR']) ? $_SERVER['HTTP_X_FORWARDED_FOR'] : $ip;
    } else {
        return is_ip($_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : $ip;
    }
}

function is_ip($str)
{
    $ip = explode('.', $str);
    for ($i = 0; $i < count($ip); $i++) {
        if ($ip[$i] > 255) {
            return false;
        }
    }
    return preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/', $str);
}

/**
 * 获取地区
 */
function getCity()
{
    $ip = $_SERVER["REMOTE_ADDR"];
    $res = @file_get_contents('http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&ip=' . $ip);
    if(empty($res)){
        return false;
    }
    $jsonMatches = array();
    preg_match('#\{.+?\}#', $res, $jsonMatches);
    if(!isset($jsonMatches[0])){ return false; }
    $json = json_decode($jsonMatches[0], true);
    if(isset($json['ret']) && $json['ret'] == 1){
        $json['ip'] = $ip;
        unset($json['ret']);
    }else{
        return false;
    }
    return $json['province'] . $json['city'];
}


/**
 * 操作日志
 */
function plog($title)
{
    if ($title) {
        $admin_id = session('admin_id');
        DB::table('log')->insert([
            'admin_id' => $admin_id,
            'title' => $title
        ]);
    }
}

/**
 * 排序
 */
function treelist($data, $pid, $deep = 1)
{
    static $tree = array();
    foreach ($data as $row) {
        if ($row ['pid'] == $pid) {
            $row ['lever'] = $deep;
            $tree [] = $row;
            treelist($data, $row ['id'], $deep + 1);
        }
    }
    return $tree;
}

/**
 * 上传图片
 *
 */
function uploadImg($img, $auth)
{
    if ($img->isValid()) {                                          //判断上传文件是否有效
        $images = array(                                              //文件格式限制
            'jpg', 'png', 'jpeg', 'gif', 'bmg'
        );
        if (in_array($img->getClientOriginalExtension(), $images)) {         //判断文件后缀是否符合限制
            $size = 2 * 1024 * 1024;                                           //文件大小限制2M
            if ($img->getClientSize() < $size) {
                $name = time() . rand(1000, 9999) . "." . $img->getClientOriginalExtension();      //文件重命名
                $img->move($auth, $name);                 //保存文件，并获取url
                $url = $auth . '/' . $name;
                $data = [
                    'error' => 0,
                    'data' => $url
                ];
                return $data;
            } else {
                $data = [
                    'error' => 1,
                    'data' => '图片超过大小限制'
                ];
                return $data;
            }

        } else {
            $data = [
                'error' => 1,
                'data' => '图片格式不正确'
            ];
            return $data;
        }
    } else {
        $data = [
            'error' => 1,
            'data' => '上传的不是有效的文件'
        ];
        return $data;
    }
}


/**
 * 搜索给默认值
 */

function val($val)
{
    $a = isset($_GET[$val]) ? $_GET[$val] : "";
    $b = isset($_POST[$val]) ? $_POST[$val] : "";
    if ($a) {
        return $a;
    }
    if ($b) {
        return $b;
    }
}

/**
 * 获取的钱数处理
 */
function money($money)
{
    return abs(trim((int)$money));
}

/**
 * 获取的钱数处理
 */
function num($money)
{
    return abs(trim((double)$money));
}


function send($phone)
{
    include 'send_aliyun/php/api_sdk/aliyun-php-sdk-core/Config.php';
    include_once 'send_aliyun/php/api_sdk/Dysmsapi/Request/V20170525/SendSmsRequest.php';
    include_once 'send_aliyun/php/api_sdk/Dysmsapi/Request/V20170525/QuerySendDetailsRequest.php';

    //此处需要替换成自己的AK信息
    $accessKeyId = "LTAIVDZYNQGZ0XnP";//参考本文档步骤2
    $accessKeySecret = "xO8aGs1XXHEZVwBVjTyjjTvDPdSG5i";//参考本文档步骤2
    //短信API产品名
    $product = "Dysmsapi";
    //短信API产品域名
    $domain = "dysmsapi.aliyuncs.com";
    //暂时不支持多Region
    $region = "cn-hangzhou";

    //初始化访问的acsCleint
    $profile = DefaultProfile::getProfile($region, $accessKeyId, $accessKeySecret);
    DefaultProfile::addEndpoint("cn-hangzhou", "cn-hangzhou", $product, $domain);
    $acsClient = new DefaultAcsClient($profile);
    $request = new Dysmsapi\Request\V20170525\SendSmsRequest;
    //必填-短信接收号码。支持以逗号分隔的形式进行批量调用，批量上限为20个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式
    $request->setPhoneNumbers($phone);
    //必填-短信签名
    $request->setSignName("点客科技");
    //必填-短信模板Code
    $request->setTemplateCode("SMS_103480048");
    //验证码
    $code = mt_rand(1, 9) . mt_rand(0, 9) . mt_rand(0, 9) . mt_rand(0, 9);
    $json_code = json_encode($code);
    //选填-假如模板中存在变量需要替换则为必填(JSON格式)
    $request->setTemplateParam("{\"code\":\"{$code}\"}");
    //选填-发送短信流水号
    $request->setOutId("1234");
    //发起访问请求
    $acsResponse = $acsClient->getAcsResponse($request);
    if ($acsResponse->Code == 'OK') {
        DB::beginTransaction();     //事务开始
        $v = DB::table('verification')
            ->where([
                'phone' => $phone
            ])
            ->first();
        if ($v) {
            DB::table('verification')
                ->where([
                    'phone' => $phone
                ])
                ->delete();
        }
        $add_arr = [
            'phone' => $phone,
            'code' => $code,
            'time' => time()
        ];
        $add_info = DB::table('verification')
            ->insert($add_arr);
        if ($add_info) {
            DB::commit();
            return 1;
        } else {
            DB::rollBack();
            return 2;
        }
    } else {
        return 3;
    }
}


function getImage($url, $save_dir = '', $filename = '', $type = 0)
{
    if (trim($url) == '') {
        return array('file_name' => '', 'save_path' => '', 'error' => 1);
    }
    if (trim($save_dir) == '') {
        $save_dir = './';
    }
    if (trim($filename) == '') {//保存文件名
        $ext = strrchr($url, '.');
        if ($ext != '.gif' && $ext != '.jpg') {
            return array('file_name' => '', 'save_path' => '', 'error' => 3);
        }
        $filename = time() . $ext;
    }
    if (0 !== strrpos($save_dir, '/')) {
        $save_dir .= '/';
    }
    //创建保存目录
    if (!file_exists($save_dir) && !mkdir($save_dir, 0777, true)) {
        return array('file_name' => '', 'save_path' => '', 'error' => 5);
    }
    //获取远程文件所采用的方法
    if ($type) {
        $ch = curl_init();
        $timeout = 5;
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
        $img = curl_exec($ch);
        curl_close($ch);
    } else {
        ob_start();
        readfile($url);
        $img = ob_get_contents();
        ob_end_clean();
    }
    //$size=strlen($img);
    //文件大小
    $fp2 = @fopen($save_dir . $filename, 'a');
    fwrite($fp2, $img);
    fclose($fp2);
    unset($img, $url);
    //压缩图片
    $image = @imagecreatefromjpeg ($save_dir . $filename);
    imagejpeg ($image,$save_dir . $filename,100);
    imagedestroy ($image);
    return array('file_name' => $filename, 'save_path' => $save_dir . $filename, 'error' => 0);
}

function SignParamsToString($params)
{
    // 排序
    ksort($params);
    $buff = "";
    foreach ($params as $k => $v) {
        if ($k != "sign" && $v != "" && !is_array($v)) {
            $buff .= $k . "=" . $v . "&";
        }
    }
    $buff = trim($buff, "&");
    return $buff;
}

function postData($url, $postData = '')
{
    $ch = curl_init();
    //设置超时
    curl_setopt($ch, CURLOPT_TIMEOUT, 3600);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
    curl_setopt($ch, CURLOPT_HEADER, FALSE);
    if (!empty($postData)) {
        curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($postData));
        curl_setopt($ch, CURLOPT_POST, 1);
    }
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0);

    //运行curl，结果以jason形式返回
    $res = curl_exec($ch);
    curl_close($ch);
    return $res;
}

